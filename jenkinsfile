pipeline {
    agent any
    tools {nodejs "node"}

    environment {
        DOCKER_IMAGE = 'thunderzeye/fms_backend'
        DOCKER_REGISTRY = 'https://registry.hub.docker.com'
        DOCKER_TAG = "${DOCKER_IMAGE}:${env.BUILD_NUMBER}"
        DOCKERHUB_CREDENTIALS = 'docker-hub-credentials-id'
    }
  
    stages {
        stage('Run Build') {
            steps {
                script {
                    sh 'npm install'
                    sh 'npm run build'
                }
            }
        }
        stage('Run Tests') {
            steps {
                script {
                    sh 'npm install'
                    sh 'npm test'
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    def dockerImage = docker.build("${DOCKER_TAG}")                    if (dockerImage != null) {
                        echo 'Docker build successful'
                        currentBuild.result = 'SUCCESS'
                    } else {
                        echo 'Docker build failed'
                        currentBuild.result = 'FAILURE'
                    }
                }
            }
        }

        stage('Push Docker Image to Docker Hub') {
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', 'docker-hub-credentials-id') {
                        def dockerImage = docker.image("${DOCKER_TAG}")
                        if (dockerImage != null) {
                            dockerImage.push()
                            echo 'Docker push successful'
                        } else {
                            echo 'Docker push failed'
                            currentBuild.result = 'FAILURE'
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'One way or another, I have finished'
            cleanWs()
        }
        success {
            script {
                echo "I am successful"
            }
        }
        unstable {
            echo 'I am unstable :/'
        }
        failure {
            script {
                echo "I am a failure"
            }
        }
        changed {
            echo 'Things were different before...'
        }
    }
}